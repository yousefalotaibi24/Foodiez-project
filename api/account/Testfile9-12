// const Account = require("../../models/Account");

// exports.createAccount = async (req, res) => {
//   const book = new Account(req.body);
//   const newAccount = await book.save();
//   res.status(201).json(newAccount);
// };

// exports.accountDetail = async (req, res) => {
//   const { accountId } = req.params;
//   const account = await Account.findById(accountId);
//   if (account) {
//     res.status(200).json(account);
//   } else {
//     res.status(404).json();
//   }
// };

// exports.listAccounts = async (req, res) => {
//   try {
//     const accounts = await Account.find();
//     res.status(200).json(accounts);
//   } catch (error) {
//     res.status(500).json(error);
//   }
// };

// exports.updateAccount = async (req, res) => {
//   const { accountId } = req.params;
//   try {
//     const foundAccount = await Account.findById(accountId);
//     await foundAccount.updateOne(req.body);
//     res.status(204).end();
//   } catch (error) {
//     res.status(500).json({ message: error.message });
//   }
// };

// exports.deleteAccount = async (req, res) => {
//   const { accountId } = req.params;
//   const foundAccount = await Account.findById(accountId);
//   if (foundAccount) {
//     await foundAccount.deleteOne();
//     res.status(204).end();
//   } else {
//     res.status(404).json();
//   }
// };

//// 
// with yousef

// const Category = require("../models/Category");
// exports.listCategories = async (req, res) => {
//   try {
//     const categories = await Category.find();
//     res.status(200).json(categories);
//   } catch (error) {
//     res.status(500).json(error);
//   }
// };

// exports.categoryDetail = async (req, res) => {
//   const { categoryId } = req.params;
//   const category = await Category.findById(categoryId);
//   if (category) {
//     res.status(200).json(category);
//   } else {
//     res.status(404).json();
//   }
// };

// exports.createCategory = async (req, res) => {
//   const category = new Category(req.body);
//   const savedCategory = await category.save();
//   res.status(201).json(savedCategory);
// };

// exports.updateCategory = async (req, res) => {
//   const { categoryId } = req.params;
//   const foundCategory = await Category.findById(categoryId);
//   if (foundCategory) {
//     await foundCategory.updateOne(req.body);
//     res.status(202).json();
//   } else {
//     res.status(404).json();
//   }
// };

// exports.deleteCategory = async (req, res) => {
//   const { categoryId } = req.params;
//   const foundCategory = await Category.findById(categoryId);
//   if (foundCategory) {
//     await foundCategory.deleteOne();
//     res.status(204).end();
//   } else {
//     res.status(404).json();
//   }
// };

// with yousef
// const e = require("express");
// const Ingredients = require("../models/Ingredients");
// exports.listIngredients = async (req, res) => {
//   try {
//     const ingredients = await Ingredients.find();
//     res.status(200).json(ingredients);
//   } catch (error) {
//     res.status(500).json(error);
//   }
// };
// exports.ingredientDetail = async (req, res) => {
//   const { ingredientId } = req.params;
//   const ingredient = await Ingredients.findById(ingredientId);
//   if (ingredient) {
//     res.status(200).json(ingredient);
//   } else {
//     res.status(404).json();
//   }
// };
// exports.createIngredient = async (req, res) => {
//   const ingredient = new Ingredients(req.body);
//   const savedIngredient = await ingredient.save();
//   res.status(201).json(savedIngredient);
// };
// exports.updateIngredient = async (req, res) => {
//   const { ingredientId } = req.params;
//   const foundIngredient = await Ingredients.findById(ingredientId);
//   if (foundIngredient) {
//     await foundIngredient.updateOne(req.body);
//     res.status(202).json();
//   } else {
//     res.status(404).json();
//   }
// };
// exports.deleteIngredient = async (req, res) => {
//   const { ingredientId } = req.params;
//   const foundIngredient = await Ingredients.findById(ingredientId);
//   if (foundIngredient) {
//     await foundIngredient.deleteOne();
//     res.status(204).end();
//   } else {
//     res.status(404).json();
//   }
// };